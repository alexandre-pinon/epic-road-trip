// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	model "github.com/alexandre-pinon/epic-road-trip/model"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AmadeusService is an autogenerated mock type for the AmadeusService type
type AmadeusService struct {
	mock.Mock
}

// GetAccessToken provides a mock function with given fields: amadeusBaseUrl
func (_m *AmadeusService) GetAccessToken(amadeusBaseUrl string) (string, error) {
	ret := _m.Called(amadeusBaseUrl)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(amadeusBaseUrl)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(amadeusBaseUrl)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFlightOffers provides a mock function with given fields: amadeusBaseUrl, accessToken, flightFormData
func (_m *AmadeusService) GetFlightOffers(amadeusBaseUrl string, accessToken string, flightFormData *model.FlightFormData) (*[]model.Itinerary, error) {
	ret := _m.Called(amadeusBaseUrl, accessToken, flightFormData)

	var r0 *[]model.Itinerary
	if rf, ok := ret.Get(0).(func(string, string, *model.FlightFormData) *[]model.Itinerary); ok {
		r0 = rf(amadeusBaseUrl, accessToken, flightFormData)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]model.Itinerary)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, *model.FlightFormData) error); ok {
		r1 = rf(amadeusBaseUrl, accessToken, flightFormData)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAmadeusService creates a new instance of AmadeusService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAmadeusService(t testing.TB) *AmadeusService {
	mock := &AmadeusService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
